{"version":3,"sources":["Components/Header.js","Components/Inputs.js","Components/ThemeContext.js","Components/Cards.js","Components/Container.js","Components/InfoPage.js","App.js","reportWebVitals.js","index.js"],"names":["Header","body","document","querySelector","isDark","classList","contains","useState","iconClass","setIconClass","className","onClick","toggle","Inputs","filterCountryRegion","filterCountryName","type","placeholder","aria-label","onChange","e","name","target","value","id","selection","options","selectedIndex","disabled","selected","hidden","ThemeContext","React","createContext","Cards","filteredCountries","useContext","countryList","getCountryName","list","data","length","map","alpha3Code","flag","population","region","capital","src","alt","toLocaleString","createCards","Container","filterName","setFilterName","filterRegion","setFilterRegion","setFilteredCountries","useEffect","filteredByName","filter","country","toLowerCase","includes","filteredByRegion","InfoPage","nativeName","subregion","topLevelDomain","currencies","languages","borders","goBack","join","border","borderCountry","find","item","innerHTML","App","setCountryList","setCountry","showDetailPage","setShowDetailPage","a","fetch","res","json","fetchApi","componentToRender","appState","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.acfdc692.chunk.js","sourcesContent":["import { React, useState } from 'react';\r\n\r\nconst Header = () => {\r\n    const body = document.querySelector(\"body\");\r\n    let isDark = body.classList.contains(\"dark\")\r\n      ? \"fas fa-moon\"\r\n      : \"far fa-moon\";\r\n    const [iconClass, setIconClass] = useState(isDark);\r\n\r\n    \r\n    const handleTheme = () => {\r\n        body.classList.toggle('dark')\r\n        setIconClass(\r\n          body.classList.contains(\"dark\") ? \"fas fa-moon\" : \"far fa-moon\"\r\n        );\r\n    }\r\n            \r\n    \r\n    return (\r\n      <header>\r\n        <div className=\"header__container\">\r\n          <p>Where in the world?</p>\r\n          <div className=\"theme\">\r\n            <i className={iconClass} onClick={handleTheme}></i>\r\n            <p>Dark Mode</p>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    );\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\n// import ThemeContext from \"./ThemeContext\";\r\n\r\nconst Inputs = ({ filterCountryRegion, filterCountryName }) => {\r\n\r\n\r\n    return (\r\n        <div className='inputs'>\r\n            <div className=\"search-container\">\r\n\r\n                <input type=\"search\" placeholder='Search for a country...' aria-label=\"Search countries\" className='input-search input' onChange={\r\n                    (e) => {\r\n                        let name = e.target.value\r\n                        filterCountryName(name)\r\n                    }\r\n                }/>\r\n            <i className=\"fas fa-search\"></i>\r\n\r\n            </div>\r\n\r\n            <div className=\"select-container\">\r\n                <select id=\"filter\" name=\"filter\" className='input-filter input'\r\n                    onChange={(e) => {\r\n                        let selection = e.target.options\r\n                        let value = selection[selection.selectedIndex].value\r\n                        filterCountryRegion(value)\r\n                        \r\n                    }}>\r\n    <option disabled value selected hidden>Filter by Region</option>\r\n    <option value=\"Africa\">Africa</option>\r\n    <option value=\"Americas\">America</option>\r\n    <option value=\"Asia\">Asia</option>\r\n    <option value=\"Europe\">Europe</option>\r\n    <option value=\"Oceania\">Oceania</option>\r\n    <option value=\"Polar\">Polar</option>\r\n  </select>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Inputs\r\n","import React from 'react'\r\n\r\nconst ThemeContext = React.createContext(null);\r\n\r\nexport default ThemeContext\r\n","import React from 'react';\r\nimport ThemeContext from \"./ThemeContext\";\r\n\r\n\r\nconst Cards = ({ filteredCountries}) => {\r\n    \r\n    const { countryList, getCountryName } = React.useContext(ThemeContext)\r\n    \r\n    const createCards = (list) => {\r\n        let data = list?.length ? filteredCountries : countryList\r\n\r\n        let cards = data?.map(({alpha3Code, name, flag, population, region, capital }) => (\r\n                <div className=\"card\" key={alpha3Code} onClick={() => {\r\n                    getCountryName(name)\r\n                }}>\r\n            <img src={flag} alt={`flag of ${name}`} className='card-flag' />\r\n            <div className=\"card-info\">\r\n                <h2>{name}</h2>\r\n                <h3>Population: <span>{ (population).toLocaleString('en')}</span></h3>\r\n                <h3>Region: <span>{ region }</span></h3>\r\n                <h3>Capital: <span>{ capital}</span></h3>\r\n            </div>\r\n                </div>\r\n            )\r\n        );\r\n\r\n        return cards\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='cards-container'>\r\n            {createCards(filteredCountries)}\r\n            {/* {createCards(countryList)} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import Inputs from './Inputs';\r\nimport Cards from './Cards';\r\nimport React, { useState, useEffect } from 'react'\r\nimport ThemeContext from \"./ThemeContext\";\r\n\r\n\r\n\r\nconst Container = () => {\r\n    const [filterName, setFilterName] = useState('')\r\n    const [filterRegion, setFilterRegion] = useState('')\r\n    const [filteredCountries, setFilteredCountries] = useState()\r\n\r\n    const { countryList } = React.useContext(ThemeContext)\r\n\r\n    const filterCountryRegion = (data) => {\r\n        setFilterRegion(data)\r\n    }\r\n\r\n    const filterCountryName = (data) => {\r\n        setFilterName(data.toLowerCase())\r\n    }\r\n\r\n    useEffect(() => {\r\n        let filteredByName = filterName ? countryList.filter(\r\n            country => country.name.toLowerCase().includes(filterName) \r\n        ) : countryList\r\n\r\n        setFilteredCountries(filteredByName)\r\n    }, [filterName])\r\n\r\n    useEffect(() => {\r\n        let filteredByRegion = filterRegion ? countryList.filter(\r\n            country => country.region === filterRegion\r\n        ) :\r\n            countryList\r\n        setFilteredCountries(filteredByRegion)\r\n    }, [filterRegion])\r\n\r\n\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {/* <Inputs filterCountryRegion={filterCountryRegion} countryList={countryList} filterCountryName={ filterCountryName}/>\r\n            <Cards filteredCountries={filteredCountries}\r\n                countryList={countryList}\r\n            getCountryName={ getCountryName }/> */}\r\n        <Inputs\r\n          filterCountryRegion={filterCountryRegion}\r\n          filterCountryName={filterCountryName}\r\n        />\r\n        <Cards filteredCountries={filteredCountries} />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Container\r\n","import React from \"react\";\r\nimport ThemeContext from \"./ThemeContext\";\r\n\r\nconst InfoPage = () => {\r\n\r\n  const {\r\n    country: {\r\n      flag,\r\n      name,\r\n      nativeName,\r\n      population,\r\n      region,\r\n      subregion,\r\n      capital,\r\n      topLevelDomain,\r\n      currencies,\r\n      languages,\r\n      borders,\r\n    },\r\n    goBack,\r\n    countryList,\r\n    getCountryName,\r\n  } = React.useContext(ThemeContext);\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <button onClick={goBack} className=\"back-btn\">\r\n        <i className=\"fas fa-long-arrow-alt-left\"></i>Back\r\n      </button>\r\n      <div className=\"info-container\">\r\n        <img src={flag} alt={`Flag of ${name}`} className=\"info-flag\" />\r\n        <div className=\"info-info\">\r\n          <h2>{name}</h2>\r\n          <div className=\"info-one\">\r\n            <h3>\r\n              Native Name: <span>{nativeName}</span>\r\n            </h3>\r\n            <h3>\r\n              Population: <span>{population.toLocaleString(\"en\")}</span>\r\n            </h3>\r\n            <h3>\r\n              Region: <span>{region}</span>\r\n            </h3>\r\n            <h3>\r\n              Sub Region: <span>{subregion}</span>\r\n            </h3>\r\n            <h3>\r\n              Capital: <span>{capital}</span>\r\n            </h3>\r\n          </div>\r\n          <div className=\"info-two\">\r\n            <h3>\r\n              Top Level Domain: <span>{topLevelDomain.join(\", \")}</span>\r\n            </h3>\r\n            <h3>\r\n              Currencies:{\" \"}\r\n              <span>{currencies.map(({ name }) => name).join(\", \")}</span>\r\n            </h3>\r\n            <h3>\r\n              Languages:{\" \"}\r\n              <span>{languages.map(({ name }) => name).join(\", \")}</span>\r\n            </h3>\r\n          </div>\r\n\r\n          <div className='border-container'>\r\n\r\n          {borders.length > 0 && <h3 className=\"border\">Border Countries: </h3>}\r\n          <div className=\"border-buttons\">\r\n            {borders.map((border) => {\r\n              // if (index > 2) return null;\r\n              let borderCountry = countryList.find(\r\n                (item) => item.alpha3Code === border\r\n              );\r\n\r\n              return (\r\n                <button\r\n                  onClick={(e) => {\r\n                    getCountryName(e.target.innerHTML);\r\n                  }}\r\n                  key={borderCountry.alpha3Code}\r\n                  className=\"border-btn\"\r\n                >\r\n                  {borderCountry.name}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoPage;\r\n","import Header from \"./Components/Header\";\nimport Container from \"./Components/Container\";\nimport InfoPage from \"./Components/InfoPage\";\nimport { useEffect, useState } from \"react\";\nimport ThemeContext from \"./Components/ThemeContext\";\n\nfunction App() {\n  const [countryList, setCountryList] = useState();\n  const [country, setCountry] = useState();\n  const [showDetailPage, setShowDetailPage] = useState(false);\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      let res = await fetch(\"https://restcountries.eu/rest/v2/all\");\n      let data = await res.json();\n      setCountryList(data);\n    };\n    fetchApi();\n  }, []);\n\n  const getCountryName = (name) => {\n    setCountry(countryList.find((country) => country.name === name));\n    setShowDetailPage(true);\n  };\n\n  const goBack = () => {\n    setShowDetailPage(false);\n  };\n\n  // let componentToRender = showDetailPage ? (\n  //   <InfoPage\n  //     country={country}\n  //     goBack={goBack}\n  //     countryList={countryList}\n  //     getCountryName={getCountryName}\n  //   />\n  // ) : (\n  //   <Container countryList={countryList} getCountryName={getCountryName} />\n  // );\n  let componentToRender = showDetailPage ? (\n    <InfoPage />\n  ) : (\n    <Container />\n  );\n\n  const appState = {\n    countryList,\n    country,\n    showDetailPage,\n    goBack,\n    getCountryName,\n  };\n\n  return (\n    <div className=\"App\">\n      <ThemeContext.Provider value={appState}>\n        <Header />\n        {componentToRender}\n      </ThemeContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}